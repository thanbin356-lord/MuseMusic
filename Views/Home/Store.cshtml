@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<main>
    <div class="yoru">
        <div class="container">
            <h1>Giỏ hàng</h1>
            <div class="spark"></div>

            <div class="cart-container-main">

                <div class="cart-table">

                    <table class="cart-table">
                        <tbody>

                        </tbody>
                    </table>

                </div>

                <div class="summary">
                    <div class="summary-box">
                        <h2>Tổng tiền hàng</h2>
                        <div class="check"></div>
                        <p><span>Tổng tiền</span>
                            <span id="total-price"></span>
                        </p>
                        <button class="checkout-btn">Thanh toán</button>
                    </div>
                </div>

            </div>

        </div>
    </div>
</main>

<script>
    function populateCart() {
        const cart = JSON.parse(localStorage.getItem('cart')) || [];
        const tbody = document.querySelector('tbody');
        const totalPriceElement = document.getElementById('total-price'); // Element showing "Tổng tiền"

        tbody.innerHTML = ''; // Clear existing rows

        let totalPrice = 0; // Initialize total price

        cart.forEach(item => {
            const row = document.createElement('tr');
            const itemTotalPrice = item.price * item.quantity; // Calculate item total
            totalPrice += itemTotalPrice; // Add to total price


            row.innerHTML = `
            <td class="product-info">
                <img src="${item.image}" alt="Album">
                <span>${item.name} - ${item.artist} - ${item.diskid}</span>
            </td>
            <td class="product-price">${item.price.toLocaleString()} đ</td>
            <td class="product-quantity">
                <span>Số lượng:</span>
                <div class="quantity-controls">
                    <button class="quantity-btn" data-action="decrement" data-id="${item.id}">-</button>
                    <input type="text" value="${item.quantity}" class="quantity-input" data-id="${item.id}">
                    <button class="quantity-btn" data-action="increment" data-id="${item.id}">+</button>
                </div>
            </td>
            <td class="product-delete">
                <span class="delete" data-id="${item.id}"><i class="fa-solid fa-trash"></i></span>
            </td>
        `;

            tbody.appendChild(row);
        });

        // Update the "Tổng tiền" display
        totalPriceElement.textContent = `${totalPrice.toLocaleString()} đ`;
    }

    // Handle quantity update
    function handleQuantityChange(action, productId) {
        const cart = JSON.parse(localStorage.getItem('cart')) || [];
        console.log('1')
        // Find the product in the cart
        const product = cart.find(item => item.id === productId);

        if (product) {
            if (action === 'increment') {
                product.quantity += 1; // Increase quantity
            } else if (action === 'decrement' && product.quantity > 1) {
                product.quantity -= 1; // Decrease quantity but ensure it doesn't go below 1
            }

            // Save updated cart back to localStorage
            localStorage.setItem('cart', JSON.stringify(cart));

            // Re-populate cart and recalculate totals
            populateCart();
        }
    }

    // Handle events for buttons and input
    document.addEventListener('DOMContentLoaded', () => {
        populateCart();

        const tbody = document.querySelector('tbody');

        // Add event listeners for quantity buttons
        tbody.addEventListener('click', (event) => {
            if (event.target.classList.contains('quantity-btn')) {
                const action = event.target.dataset.action; // 'increment' or 'decrement'
                const productId = event.target.dataset.id;

                handleQuantityChange(action, productId);
            }
        });

        // Add event listeners for delete buttons
        tbody.addEventListener('click', (event) => {
            if (event.target.closest('.delete')) {
                const productId = event.target.closest('.delete').dataset.id;

                // Remove the product from the cart
                const cart = JSON.parse(localStorage.getItem('cart')) || [];
                const updatedCart = cart.filter(item => item.id !== productId);

                // Save updated cart to localStorage and re-render
                localStorage.setItem('cart', JSON.stringify(updatedCart));
                populateCart();
            }
        });
    });
    document.querySelector('.checkout-btn').addEventListener('click', () => {
    const cart = JSON.parse(localStorage.getItem('cart')) || [];

    // Gửi dữ liệu giỏ hàng tới server
    fetch('/Cart/Checkout', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
        },
        body: JSON.stringify(cart),
    })
    .then(response => {
        if (response.ok) {
            window.location.href = '/Home/Payment'; // Chuyển sang trang Payment
        } else {
            alert('Có lỗi xảy ra khi chuyển sang trang thanh toán.');
        }
    });
});

</script>