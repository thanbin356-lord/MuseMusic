@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@model MuseMusic.Models.ViewModels.VinylViewModel

<main>
    <!-- Product Head -->
    <section class="section-padding">
        <div class="container">
            <div class="row align-items-center">
                <input type="hidden" id="prodid" asp-for="SelectedProduct.ProductId"
                    value="@Model.SelectedProduct.ProductId" />
                <div class="col-lg-6 col-12">
                    <div class="product-thumb">
                        <button id="prev" class="btn btn-link"><i class="fa-sharp fa-solid fa-arrow-left"></i></button>
                        <img id="main-image" src="@Model.SelectedProduct.PrimaryImageUrl" class="product-image"
                            alt="Main Product Image">
                        <button id="next" class="btn btn-link"><i class="fa-sharp fa-solid fa-arrow-right"></i></button>
                    </div>

                    <div class="thumbnail-slider">
                        @foreach (var imageUrl in Model.SelectedProduct.ImageUrls)
                        {
                            <div class="thumbnail" data-image="@imageUrl">
                                <img src="@imageUrl" alt="Product Thumbnail">
                            </div>
                        }
                    </div>
                </div>

                <div class="col-lg-6 col-12">
                    <div class="product-info">
                        <div>
                            <h2 id="prodname">@Model.SelectedProduct.ProductName</h2>
                            <h3 id="artistname">@string.Join(", ", Model.SelectedArtistNames)</h3>
                            <h4 id="prodprice">@Model.SelectedProduct.Price</h4>
                            <h5 id="proddiskid">Mã sản phẩm: @Model.SelectedProduct.DiskId</h5>
                        </div>

                    </div>

                    <div class="product-cart-thumb">

                        <div class="row">
                            <div class="col-lg-4 col-12 mt-4 mt-lg-0">

                                <div class="align-items-center">
                                    <div class="quantity">
                                        <button class="btn btn-link px-2"
                                            onclick="this.parentNode.querySelector('input[type=number]').stepDown()">
                                            <i class="fa-solid fa-caret-left"></i>
                                        </button>

                                        <input id="quantity-selection" min="1" name="quantity" value="2" type="number"
                                            class="form-control form-control-sm" style="width: 50px;" />

                                        <button class="btn btn-link px-2"
                                            onclick="this.parentNode.querySelector('input[type=number]').stepUp()">
                                            <i class="fa-solid fa-caret-right"></i>
                                        </button>
                                    </div>
                                </div>

                            </div>

                            <div class="col-lg-2 col-12 mt-4 mt-lg-0">

                                <button class="heart-btn"><i class="fa-solid fa-heart"></i></button>
                            </div>

                            <div class="col-lg-6 col-12 mt-4 mt-lg-0">


                                <button id="addcart" class="cart-btn">Thêm vào giỏ hàng</button>
                            </div>

                            <div class="col-lg-12 col-md-6">
                                <p></p>
                            </div>
                        </div>

                    </div>

                </div>

            </div>
        </div>
    </section>

    <!-- Product Infor & API Music Player -->
    <section class="section-padding">
        <div class="container">
            <div class="row align-items-center">

                <div class="col-lg-6 col-12">

                    <div class="product-description">
                        <h2>Mô tả sản phẩm</h2>
                        <div class="row">
                            <div class="col-lg-6 col-12">
                                <h6>Năm sản xuất</h6>
                                <h6>Thể loại</h6>
                                <h6>Hãng phát hành</h6>
                                <h6>Tình trạng đĩa</h6>
                                <h6>Mã sản phẩm </h6>
                                <h6>Số lượng</h6>

                            </div>
                            <div class="col-lg-6 col-12">
                                <h6>@Model.SelectedProduct.Years</h6>
                                <h6>@string.Join(", ", Model.SelectedCategoryNames)</h6>
                                <h6>@Model.SelectedProduct.SelectedBrandName</h6>
                                <h6>@Model.SelectedProduct.ProductQuantity</h6>
                                <h6>@Model.SelectedProduct.DiskId</h6>
                                <h6>@Model.SelectedProduct.ProductQuantity</h6>
                            </div>
                        </div>

                    </div>
                </div>

                <div class="col-lg-6 col-12">
                    <div class="music-player">

                        <div class="music-header">

                            <img src="images/music-player.png" alt="Arcane official playlist">

                            <div class="music-info">
                                <h4>Arcane official playlist</h4>
                                <button>Preview</button>
                            </div>
                        </div>

                        <div class="controls">
                            <div class="prev">
                                <i class="icofont-ui-previous"></i>
                            </div>
                            <div class="next">
                                <i class="icofont-ui-next"></i>
                            </div>
                            <div class="play">
                                <i class="icofont-play-alt-1"></i>
                            </div>
                        </div>
                        <div class="track-time">
                            <div class="track"></div>
                            <div class="time">
                                <div class="total-time">03:20</div>
                                <div class="last-time">00:12</div>
                            </div>
                        </div>
                        <div class="song-list">
                            <div class="single-song-list">
                                <div class="song-list-title">
                                    <h4>1. Heavy Is The Crowns</h4>
                                    <h5>Mike Shinoda, Emily Amstrong</h5>
                                </div>
                                <h6>01:41</h6>
                            </div>
                            <div class="single-song-list">
                                <div class="song-list-title">
                                    <h4>2. I Can’t Hear It Now</h4>
                                    <h5>Freya Riddings</h5>
                                </div>
                                <h6>02:34</h6>
                            </div>
                            <div class="single-song-list">
                                <div class="song-list-title">
                                    <h4>3. Sucker</h4>
                                    <h5>Marcus Kings</h5>
                                </div>
                                <h6>01:21</h6>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
    </section>

    <!-- Tracklist -->
    <section class="section-padding">
        <div class="container">
            <div class="row align-items-center">
                <div class="col-lg-6 col-12">
                    <div class="track-list">
                        <h2>Tracklist</h2>
                        @foreach (var song in @Model.SelectedProduct.Tracklist.Split(';'))
                        {
                            <h6>@song.Trim()</h6>
                        }
                    </div>

                </div>
            </div>
        </div>
    </section>

    <!-- More Similar Product -->
    <div class="container">
        <div class="section-title">
            <h1>SẢN PHẨM KHÁC</h1>
        </div>
    </div>

    <div class="product-container">
        @if (Model.Products != null && Model.Products.Any())
        {
            @foreach (var product in Model.Products)
            {
                <div class="product">
                    <a href="/Home/VinylDetails/@product.ProductId">
                        <img src="/images/product/product.png" alt="">
                    </a>
                    <h2>@product.ProductName</h2>
                    <p></p> <!-- Assuming you have a list of Artist names -->
                    <p class="price">@product.Price</p>
                </div>
            }
        }
        else
        {
            <p>No products available.</p> <!-- Handle case when Products is empty or null -->
        }
    </div>


</main>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
    const thumbnails = document.querySelectorAll('.thumbnail');
    const mainImage = document.getElementById('main-image');
    const prevBtn = document.getElementById('prev');
    const nextBtn = document.getElementById('next');
    const thumbnailSlider = document.querySelector('.thumbnail-slider');

    let currentIndex = 0; // Start at the first thumbnail
    // Function to change the main image based on the clicked thumbnail
    function changeMainImage(index) {
        const selectedThumbnail = thumbnails[index];
        mainImage.src = selectedThumbnail.getAttribute('data-image');
        let isDragging = false; // Flag to track if the user is dragging
    }

    // Event listeners for thumbnail clicks
    thumbnails.forEach((thumbnail, index) => {
        thumbnail.addEventListener('click', (e) => {
            // Do not change the image if dragging is in progress
            if (!isDragging) {
                currentIndex = index; // Update the current index when a thumbnail is clicked
                changeMainImage(currentIndex);
            }
        });
    });


    // Event listener for next button (to go to the next image)
    nextBtn.addEventListener('click', () => {
        currentIndex = (currentIndex + 1) % thumbnails.length; // Loop back to the first image if we reach the end
        changeMainImage(currentIndex);
    });

    // Event listener for previous button (to go to the previous image)
    prevBtn.addEventListener('click', () => {
        currentIndex = (currentIndex - 1 + thumbnails.length) % thumbnails.length; // Loop back to the last image if we reach the start
        changeMainImage(currentIndex);
    });



    // Implement mouse drag to scroll through thumbnails
    let startX;
    let scrollLeft;

    thumbnailSlider.addEventListener('mousedown', (e) => {
        isDragging = true; // Start dragging
        startX = e.pageX - thumbnailSlider.offsetLeft;
        scrollLeft = thumbnailSlider.scrollLeft;
    });

    thumbnailSlider.addEventListener('mouseleave', () => {
        isDragging = false; // Stop dragging when mouse leaves
    });

    thumbnailSlider.addEventListener('mouseup', () => {
        isDragging = false; // Stop dragging when mouse button is released
    });

    thumbnailSlider.addEventListener('mousemove', (e) => {
        if (!isDragging) return;
        e.preventDefault();
        const x = e.pageX - thumbnailSlider.offsetLeft;
        const walk = (x - startX) * 2; // Scroll faster
        thumbnailSlider.scrollLeft = scrollLeft - walk;
    });

    function addToCart(item) {
        let cart = JSON.parse(localStorage.getItem('cart')) || [];

        const existingIndex = cart.findIndex(cartItem => cartItem.id === item.id);

        if (existingIndex !== -1) {
            // SweetAlert thông báo sản phẩm đã có trong giỏ hàng
            Swal.fire({
                icon: 'info',
                title: 'Thông báo',
                text: 'Sản phẩm này đã có trong giỏ hàng!',
            });
        } else {
            cart.push(item);
            localStorage.setItem('cart', JSON.stringify(cart));
            Swal.fire({
                icon: 'success',
                title: 'Thành công',
                text: 'Sản phẩm đã được thêm vào giỏ hàng!',
            });
        }
    }

    // Add event listener to the button
    document.getElementById('addcart').addEventListener('click', () => {
        // Retrieve values from the DOM
        const id = document.getElementById('prodid').value;
        const name = document.getElementById('prodname').textContent;
        const artist = document.getElementById('artistname').textContent;
        const price = parseFloat(document.getElementById('prodprice').textContent);
        const diskid = document.getElementById('proddiskid').value;
        const quantity = document.getElementById('quantity-selection').value;
        const imageUrl = document.getElementById('main-image').getAttribute('src');

        // Define the item object
        const item = {
            id: id,
            name: name,
            artist: artist,
            price: price,
            diskid: diskid,
            quantity: quantity, // Default quantity
            image: imageUrl,
        };

        // Add the item to the cart
        addToCart(item);
    });
</script>