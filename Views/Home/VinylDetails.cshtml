@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@model MuseMusic.Models.ViewModels.VinylViewModel

<main>
    <!-- Product Head -->
    <section class="section-padding">
        <div class="container">
            <div class="row align-items-center">
                <input type="hidden" id="prodid" asp-for="SelectedProduct.ProductId"
                    value="@Model.SelectedProduct.ProductId" />
                <div class="col-lg-6 col-12">
                    <div class="product-thumb">
                        <button id="prev" class="btn btn-link"><i class="fa-sharp fa-solid fa-arrow-left"></i></button>
                        <img id="main-image" src="@Model.SelectedProduct.PrimaryImageUrl" class="product-image"
                            alt="Main Product Image">
                        <button id="next" class="btn btn-link"><i class="fa-sharp fa-solid fa-arrow-right"></i></button>
                    </div>

                    <div class="thumbnail-slider">
                        @foreach (var imageUrl in Model.SelectedProduct.ImageUrls)
                        {
                            <div class="thumbnail" data-image="@imageUrl">
                                <img src="@imageUrl" alt="Product Thumbnail">
                            </div>
                        }
                    </div>
                </div>

                <div class="col-lg-6 col-12">
                    <div class="product-info">
                        <div>
                            <h2 id="prodname">@Model.SelectedProduct.ProductName</h2>
                            <h3 id="artistname">@string.Join(", ", Model.SelectedArtistNames)</h3>
                            <h4 id="prodprice">@Model.SelectedProduct.Price</h4>
                            <h5 id="proddiskid">Mã sản phẩm: @Model.SelectedProduct.DiskId</h5>
                        </div>

                    </div>

                    <div class="product-cart-thumb">

                        <div class="row">
                            <div class="col-lg-4 col-12 mt-4 mt-lg-0">

                                <div class="align-items-center">
                                    <div class="quantity">
                                        <button class="btn btn-link px-2"
                                            onclick="this.parentNode.querySelector('input[type=number]').stepDown()">
                                            <i class="fa-solid fa-caret-left"></i>
                                        </button>

                                        <input id="quantity-selection" min="1" name="quantity" value="1" type="number"
                                            class="form-control form-control-sm" style="width: 60px;" />

                                        <button class="btn btn-link px-2"
                                            onclick="this.parentNode.querySelector('input[type=number]').stepUp()">
                                            <i class="fa-solid fa-caret-right"></i>
                                        </button>
                                    </div>
                                </div>

                            </div>

                            <div class="col-lg-2 col-12 mt-4 mt-lg-0">

                                <button id="addwish" class="heart-btn"><i class="fa-solid fa-heart heart-icon" ;"></i></i></button>
                            </div>

                            <div class="col-lg-6 col-12 mt-4 mt-lg-0">


                                <button id="addcart" class="cart-btn">Thêm vào giỏ hàng</button>
                            </div>

                            <div class="col-lg-12 col-md-6">
                                <p></p>
                            </div>
                        </div>

                    </div>

                </div>

            </div>
        </div>
    </section>

    <!-- Product Infor & API Music Player -->
    <section class="section-padding">
        <div class="container">
            <div class="row align-items-center">

                <div class="col-lg-6 col-12">

                    <div class="product-description">
                        <h2>Mô tả sản phẩm</h2>
                        <div class="row">
                            <div class="col-lg-6 col-12">
                                <h6>Năm sản xuất</h6>
                                <h6>Thể loại</h6>
                                <h6>Hãng phát hành</h6>
                                <h6>Tình trạng đĩa</h6>
                                <h6>Mã sản phẩm </h6>
                                <h6>Số lượng</h6>

                            </div>
                            <div class="col-lg-6 col-12">
                                <h6>@Model.SelectedProduct.Years</h6>
                                <h6>@string.Join(", ", Model.SelectedCategoryNames)</h6>
                                <h6>@Model.SelectedProduct.SelectedBrandName</h6>
                                <h6>@Model.SelectedProduct.ProductQuantity</h6>
                                <h6>@Model.SelectedProduct.DiskId</h6>
                                <h6>@Model.SelectedProduct.ProductQuantity</h6>
                            </div>
                        </div>

                    </div>
                </div>

                <div class="col-lg-6 col-12">
                    <audio id="audio" src=""></audio>
                    <div class="music-player">

                        <div class="music-header">
                            <img src="/image/vyny.png" alt="Arcane official playlist">
                            <div class="music-info">
                                <h4>Official playlist</h4>
                                <button>Preview</button>
                            </div>
                        </div>

                        <div class="controls">
                            <button class="play-back" id="play-back" style="background:none;">
                                <i class="fa-solid fa-backward"></i>
                            </button>
                            <button class="play" id="play" style="background:none;">
                                <i class="play-inner fa-solid fa-play"></i>
                            </button>
                            <button class="play-forward" id="play-forward" style="background:none;">
                                <i class="fa-solid fa-forward"></i>
                            </button>
                        </div>
                        <div class="track-time">
                            <input type="range" name="range" id="range" value="0">
                            <div class="timer">
                                <div class="duration">00:00</div>
                                <div class="remaining">00:00</div>
                            </div>
                        </div>
                        <div class="song-list">
                            <div class="single-song-list" data-song="0">
                                <div class="song-list-title">
                                    <h4>Track 1</h4>
                                    <h5>#</h5>
                                </div>
                                <h6><i class="fa-solid fa-music"></i></h6>
                            </div>
                            <div class="single-song-list" data-song="1">
                                <div class="song-list-title">
                                    <h4>Track 2</h4>
                                    <h5>#</h5>
                                </div>
                                <h6><i class="fa-solid fa-music"></i></h6>
                            </div>
                            <div class="single-song-list" data-song="2">
                                <div class="song-list-title">
                                    <h4>Track 3</h4>
                                    <h5>#</h5>
                                </div>
                                <h6><i class="fa-solid fa-music"></i></h6>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
    </section>

    <!-- Tracklist -->
    <section class="section-padding">
        <div class="container">
            <div class="row align-items-center">
                <div class="col-lg-6 col-12">
                    <div class="track-list">
                        <h2>Tracklist</h2>
                        @foreach (var song in @Model.SelectedProduct.Tracklist.Split(';'))
                        {
                            <h6>@song.Trim()</h6>
                        }
                    </div>

                </div>
            </div>
        </div>
    </section>

    <!-- More Similar Product -->
    <div class="container">
        <div class="section-title">
            <h1>SẢN PHẨM KHÁC</h1>
        </div>
    </div>

    <div class="product-container" id="product-container">
        <div class="product-slider">
            @if (Model.Products != null && Model.Products.Any())
            {
                @foreach (var product in Model.Products)
                {
                    <div class="product">
                        <a href="/Home/VinylDetails/@product.ProductId">
                            <img src="@product.PrimaryImageUrl" alt="@product.ProductName">
                        </a>
                        <h2>@product.ProductName</h2>
                        <p class="price">@product.Price</p>
                    </div>
                }
            }
            else
            {
                <p>No products available.</p>
            }
        </div>
    </div>

    <button class="scroll-button" id="scroll-left">◀</button>
    <button class="scroll-button" id="scroll-right">▶</button>


</main>

<script>
    // Lấy các phần tử cần thiết
    const audioElement = document.getElementById("audio");
    const playButton = document.querySelector(".play");
    const nextButton = document.querySelector(".play-forward");
    const prevButton = document.querySelector(".play-back");
    const playIcon = playButton.querySelector("i");
    const durationDisplay = document.querySelector(".duration");
    const remainingDisplay = document.querySelector(".remaining");
    const rangeSlider = document.getElementById("range");

    let currentTrackIndex = 0; // Bài hát hiện tại

    // Các bài hát trong mảng musicFiles (giả sử đã truyền từ server)
    const musicFiles = @Html.Raw(Json.Serialize(Model.MusicFiles));

    // Hàm tải bài hát
    function loadTrack(index) {
        if (index >= 0 && index < musicFiles.length) {
            audioElement.src = musicFiles[index];
            audioElement.load();
        }
    }

    // Hàm format thời gian (convert từ giây sang phút:giây)
    function formatTime(seconds) {
        const minutes = Math.floor(seconds / 60);
        const remainingSeconds = Math.floor(seconds % 60);
        return `${minutes < 10 ? '0' : ''}${minutes}:${remainingSeconds < 10 ? '0' : ''}${remainingSeconds}`;
    }

    // Hàm cập nhật thời gian
    function updateTime() {
        const duration = audioElement.duration;
        const currentTime = audioElement.currentTime;

        // Cập nhật thời gian đã chơi
        durationDisplay.textContent = formatTime(duration);
        // Cập nhật thời gian còn lại
        remainingDisplay.textContent = formatTime(duration - currentTime);
        // Cập nhật thanh tiến độ
        rangeSlider.value = (currentTime / duration) * 100;
    }

    // Hàm phát bài hát
    function playTrack() {
        audioElement.play();
        playIcon.classList.remove("fa-play");
        playIcon.classList.add("fa-pause");
    }

    // Hàm tạm dừng bài hát
    function pauseTrack() {
        audioElement.pause();
        playIcon.classList.remove("fa-pause");
        playIcon.classList.add("fa-play");
    }

    // Chuyển bài tiếp theo
    nextButton.addEventListener("click", () => {
        currentTrackIndex = (currentTrackIndex + 1) % musicFiles.length;
        loadTrack(currentTrackIndex);
        playTrack();
    });

    // Quay lại bài trước
    prevButton.addEventListener("click", () => {
        currentTrackIndex = (currentTrackIndex - 1 + musicFiles.length) % musicFiles.length;
        loadTrack(currentTrackIndex);
        playTrack();
    });

    // Khi bấm nút Play, bài hát sẽ được phát hoặc tạm dừng
    playButton.addEventListener("click", () => {
        if (audioElement.paused) {
            loadTrack(currentTrackIndex); // Tải bài đầu tiên khi nhấn Play
            playTrack();
        } else {
            pauseTrack();
        }
    });

    // Sự kiện khi thời gian bài hát thay đổi (khi phát nhạc)
    audioElement.addEventListener("timeupdate", updateTime);

    // Khi bài hát vừa được tải (sau khi nhấn Play)
    audioElement.addEventListener("loadeddata", updateTime);

    // Khi thay đổi thanh tiến độ (slider)
    rangeSlider.addEventListener("input", () => {
        const duration = audioElement.duration;
        const newTime = (rangeSlider.value / 100) * duration;
        audioElement.currentTime = newTime; // Cập nhật thời gian hiện tại của bài hát
    });
</script>





<script>
    @*Trượt sản phẩm khác*@
        document.addEventListener("DOMContentLoaded", function () {
            const productContainer = document.getElementById('product-container');
            const productSlider = document.querySelector('.product-slider');
            const scrollLeftButton = document.getElementById('scroll-left');
            const scrollRightButton = document.getElementById('scroll-right');
            const products = document.querySelectorAll('.product');

            // Ensure that we have products available
            if (products.length === 0) {
                console.error("No products found!");
            }

            const productWidth = products[0]?.offsetWidth || 0; // Get width of each product

            // Check that the product width is properly calculated
            if (productWidth === 0) {
                console.error("Product width could not be calculated");
            }

            let currentIndex = 0; // Start from the first product

            // Scroll Left
            scrollLeftButton.addEventListener('click', () => {
                if (currentIndex > 0) {
                    currentIndex--;
                    productSlider.style.transform = `translateX(-${currentIndex * productWidth}px)`;
                }
            });

            // Scroll Right
            scrollRightButton.addEventListener('click', () => {
                if (currentIndex < products.length - 6) { // Prevent going beyond available products
                    currentIndex++;
                    productSlider.style.transform = `translateX(-${currentIndex * productWidth}px)`;
                }
            });
        });



    const thumbnails = document.querySelectorAll('.thumbnail');
    const mainImage = document.getElementById('main-image');
    const prevBtn = document.getElementById('prev');
    const nextBtn = document.getElementById('next');
    const thumbnailSlider = document.querySelector('.thumbnail-slider');

    let currentIndex = 0; // Start at the first thumbnail
    // Function to change the main image based on the clicked thumbnail
    function changeMainImage(index) {
        const selectedThumbnail = thumbnails[index];
        mainImage.src = selectedThumbnail.getAttribute('data-image');
        let isDragging = false; // Flag to track if the user is dragging
    }

    // Event listeners for thumbnail clicks
    thumbnails.forEach((thumbnail, index) => {
        thumbnail.addEventListener('click', (e) => {
            // Do not change the image if dragging is in progress
            if (!isDragging) {
                currentIndex = index; // Update the current index when a thumbnail is clicked
                changeMainImage(currentIndex);
            }
        });
    });


    // Event listener for next button (to go to the next image)
    nextBtn.addEventListener('click', () => {
        currentIndex = (currentIndex + 1) % thumbnails.length; // Loop back to the first image if we reach the end
        changeMainImage(currentIndex);
    });

    // Event listener for previous button (to go to the previous image)
    prevBtn.addEventListener('click', () => {
        currentIndex = (currentIndex - 1 + thumbnails.length) % thumbnails.length; // Loop back to the last image if we reach the start
        changeMainImage(currentIndex);
    });



    // Implement mouse drag to scroll through thumbnails
    let startX;
    let scrollLeft;

    thumbnailSlider.addEventListener('mousedown', (e) => {
        isDragging = true; // Start dragging
        startX = e.pageX - thumbnailSlider.offsetLeft;
        scrollLeft = thumbnailSlider.scrollLeft;
    });

    thumbnailSlider.addEventListener('mouseleave', () => {
        isDragging = false; // Stop dragging when mouse leaves
    });

    thumbnailSlider.addEventListener('mouseup', () => {
        isDragging = false; // Stop dragging when mouse button is released
    });

    thumbnailSlider.addEventListener('mousemove', (e) => {
        if (!isDragging) return;
        e.preventDefault();
        const x = e.pageX - thumbnailSlider.offsetLeft;
        const walk = (x - startX) * 2; // Scroll faster
        thumbnailSlider.scrollLeft = scrollLeft - walk;
    });

    function addToCart(item) {
        let cart = JSON.parse(localStorage.getItem('cart')) || [];

        const existingIndex = cart.findIndex(cartItem => cartItem.id === item.id);

        if (existingIndex !== -1) {
            // SweetAlert thông báo sản phẩm đã có trong giỏ hàng
            Swal.fire({
                icon: 'info',
                title: 'Thông báo',
                text: 'Sản phẩm này đã có trong giỏ hàng!',
            });
        } else {
            cart.push(item);
            localStorage.setItem('cart', JSON.stringify(cart));
            Swal.fire({
                icon: 'success',
                title: 'Thành công',
                text: 'Sản phẩm đã được thêm vào giỏ hàng!',
            });
        }
    }

    // Add event listener to the button
    document.getElementById('addcart').addEventListener('click', () => {
        // Retrieve values from the DOM
        const id = document.getElementById('prodid').value;
        const name = document.getElementById('prodname').textContent;
        const artist = document.getElementById('artistname').textContent;
        const price = parseFloat(document.getElementById('prodprice').textContent);
        const diskid = document.getElementById('proddiskid').value;
        const quantity = document.getElementById('quantity-selection').value;
        const imageUrl = document.getElementById('main-image').getAttribute('src');

        // Define the item object
        const item = {
            id: id,
            name: name,
            artist: artist,
            price: price,
            diskid: diskid,
            quantity: quantity, // Default quantity
            image: imageUrl,
        };

        addToCart(item);
    });

    function addToWish(item) {
        let wish = JSON.parse(localStorage.getItem('wish')) || [];

        const existingIndex = wish.findIndex(wishItem => wishItem.id === item.id);

        if (existingIndex !== -1) {
            // SweetAlert thông báo sản phẩm đã có trong giỏ hàng
            Swal.fire({
                icon: 'info',
                title: 'Thông báo',
                text: 'Sản phẩm này đã yêu thích rồiiii!',
            });
        } else {
            wish.push(item);
            localStorage.setItem('wish', JSON.stringify(wish));
            Swal.fire({
                icon: 'success',
                title: 'Thành công',
                text: 'Sản phẩm đã yêu thích rồiiii!',
            });
        }
    }

    // Add event listener to the button
    document.getElementById('addwish').addEventListener('click', () => {
        // Retrieve values from the DOM
        const id = document.getElementById('prodid').value;
        const name = document.getElementById('prodname').textContent;
        const artist = document.getElementById('artistname').textContent;
        const imageUrl = document.getElementById('main-image').getAttribute('src');

        // Define the item object
        const item = {
            id: id,
            name: name,
            artist: artist,
            image: imageUrl,
        };

        addToWish(item);
    });
</script>